/**
 * @author bigbass1997
 */
package com.bigbass1997.ram;

import java.util.LinkedList;

/**
 * <p>Evaluation object. Create to initialize required variables and then
 * call evaluate() to evaluate the RAM's based on the given values.</p>
 */
public class RAMEval {
	
	public double initial, min, max, n, width;
	
	/**
	 * 
	 * @param initial
	 * @param min
	 * @param max
	 * @param n
	 */
	public RAMEval(double initial, double min, double max, int n){
		this.initial = initial;
		this.min = min;
		this.max = max;
		this.n = n;
		this.width = getWidth(min, max, n);
	}

	/**
	 * <p>Gets the width increment based on the number of steps/values will be used in the RAM functions.</p>
	 * 
	 * @param min minimum x value
	 * @param max maximum x value
	 * @param n number of steps/values to be used
	 * @return width increment
	 */
	private double getWidth(double min, double max, int n){
		return (max - min) / n;
	}
	
	/**
	 * <p>Begins evaluating the Left, Middle, and Right RAM, based on the 'y' or height values generated by the min, max, and width.
	 */
	public void evaluate(){
		LinkedList<Double> yList = RAMUtil.getList(min, max, width);
		
		System.out.println("--- Eval of n=" + n + " ---");
		System.out.println("LRAM=" + RAMUtil.LRAM(initial, yList, width));
		System.out.println("MRAM=" + RAMUtil.MRAM(initial, yList, width));
		System.out.println("RRAM=" + RAMUtil.RRAM(initial, yList, width));
		System.out.println();
	}
}
